"use strict";!function(){function t(t,i){var s,e=this;if(!1===((s=t)instanceof HTMLInputElement&&["text","email"].includes(s.type)))throw new Error("not a text input");if(this.inputEl=t,this.options=i||{},this.options.pattern=this.options.pattern||this.inputEl.getAttribute("pattern"),this.options.required=this.options.required||this.inputEl.required,void 0===this.options.autoInit&&(this.options.autoInit=!0),void 0===this.options.notices&&(this.options.notices=!0),null===this.options.pattern&&!0!==this.options.required)throw new Error("either pattern must be set or field must be required");this.firstRun=!0,this.setNotFirstRun=function(){e.firstRun=!1,e.inputEl.removeEventListener("blur",e.setNotFirstRun)},this.val=this.validate.bind(this),!0===this.options.autoInit&&this.enable()}t.prototype={validate:function(){var t,i=this.inputEl.value;if(t=i,!0!==this.options.required||""!==t)if(null===this.options.pattern||(s=i,e=this.options.pattern,!0===new RegExp(e).test(s))){var s,e;try{this.options.successCallback(this.inputEl,this.firstRun)}catch(t){this.options.notices&&console.log("Notice: All validation tests passed, but an error was thrown when calling options.successCallback. Set options.notices = false to eliminate these messages.")}this.setNotFirstRun()}else try{this.options.patternCallback(this.inputEl,this.firstRun)}catch(t){this.options.notices&&console.log("Validator Notice: Input failed the provided pattern, but but an error was thrown when calling options.patternCallback. Set options.notices = false to eliminate these messages.")}else try{this.options.requiredCallback(this.inputEl,this.firstRun)}catch(t){this.options.notices&&console.log("Validator Notice: Element was set as required, but but an error was thrown when calling options.requiredCallback. Set options.notices = false to eliminate these messages.")}},enable:function(){this.disable(),this.inputEl.addEventListener("input",this.val),!0===this.firstRun&&this.inputEl.addEventListener("blur",this.setNotFirstRun),this.inputEl.addEventListener("blur",this.val)},disable:function(){this.inputEl.removeEventListener("input",this.val),this.inputEl.removeEventListener("blur",this.bumpBlurCount),this.inputEl.removeEventListener("blur",this.val)}},window.Validator=window.Validator||t}();